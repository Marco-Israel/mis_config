#256 Colors and fonts
#set status-utf8 on
#set utf8 on
#set -g default-terminal "screen-256color-bce"
set -g default-terminal "screen-256color"
#set -g default-terminal "xterm-256color"
#set -g default-terminal "xterm"

#Other settings
set -g history-limit 1000
set -g status-interval 1
set -g status-left '#H#[default]'
set -g status-right '#(cut -d ” ” -f 1-4 /proc/loadavg)#[default] #%Y-%m-%d %H:%M:%S#[default]'
setw -g monitor-activity on
set -g visual-activity on

#mouse commands on
#set -g mouse off
#

#Change colors
#set pane-active-border-bg 235
set -g status-bg colour126
#set -g status-fg black



#copy and paste
#apt-get instal x-clip
#https://github.com/rpellerin/dotfiles/blob/master/.tmux.conf
bind C-P paste-buffer
setw -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection     # Begin selection in copy mode.
bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle  # Begin selection in copy mode.
bind-key -T copy-mode-vi 'y' send -X copy-selection      # Yank selection in copy mode.

#repat <C-b> to <C-a>
unbind-key C-b
set-option -g prefix C-s
bind-key C-s  send-prefix

# split panes using | and -
bind | split-window -h
bind - split-window -v

# reload config file (change file location to your the tmux.conf you want to
# use)
bind r source-file ~/.tmux.conf


#tmux save session
run-shell ~/.tmux/tmux-resurrect-master/resurrect.tmux
set -g @resurrect-strategy-vim '~/.vim/session.vim'

#tmux use vim keys
set-option -g mode-keys vi
run-shell ~/.tmux/tmux-yank-master/yank.tmux


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"


bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
#bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
#bind-key -T copy-mode-vi C-\ select-pane -l


#Navigating throug all vim like programs
#is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
#  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"
#
#bind -n C-h run "($is_vim && tmux send-keys C-h) || \
#                          tmux select-pane -L"
#
#bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
#                         ($is_fzf && tmux send-keys C-j) || \
#                         tmux select-pane -D"
#
#bind -n C-k run "($is_vim && tmux send-keys C-k) || \
#                          ($is_fzf && tmux send-keys C-k)  || \
#                          tmux select-pane -U"
#
#bind -n C-l run  "($is_vim && tmux send-keys C-l) || \
#                          tmux select-pane -R"
#
#bindy -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
#

# bind-key -n C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"
# For binding 'y' to copy and exiting selection mode
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -sel clip -i'

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'jbnicolai/tmux-fpp'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of
# tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
# INSALL: Press prefix + I (capital i, as in Install) to fetch the plugin.

