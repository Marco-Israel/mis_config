## Table of contents
* [About OpenSSL Tools](#OpenSSL-Tools)
* [Get started](#Get-started)
* [Scripts](#Scripts)
* [OpenSSL man pages](#OpenSSL-man-pages)

# OpenSSL Tools
To generate the certificates the OpenSSL toolset is used. The certificates are
described by configuration files located in the folder *openssl_configs* and
are used by OpenSSL tools during certificate build.

## Get started
To get started, simply run the script *./create-certificates.sh*. This will
generate a working example certificate chain in the *output* folder, containing:
* root-ca.der certificate  
* sub-ca.der certificate  
* subscriber certificate  

Type *-h or *--help* to get more information

## Scripts
Besides the *./create-certificates.sh" there are a few helper scripts inside this
folder to make someones work easier.  You can type *-h* or *--help* on each to 
get further information.

### ./create-certificates.sh  
This is a script (re-) building the certificates. By default it generates 
certificates for the default folder openssl_configs. You can give an other 
<path>/<folder_name> to the script to generate certificates from other
configurations. The a
rgument --verbose will also store temporary and human 
readable certificates textfiles in the outputfolder. Run --help will 
give you some more details. 

#### Example 
```console
 * Generate  good-case default example:
    ./create-certificates.sh  --verbose
```

```console
* Generate  certificates and keypairs with modified configuration files
    ./create-certificates.sh <path_openssl_configs/config_folder>/
```

### ./diff_human_readable.py
This is a *python3* script to get a diff from two human readable 
certificate txt files.  This is useful if you generate certificates from 
modified *openssl_configs*.  Run --help will give you some more details.

How to generate human readable certificates see *./create-certificates.sh --verbose*.
See also *./clone_config.sh* and *./chain_diff_human_readable.sh* in case you like 
to create a modified copy of openssl_configs

#### Example
```console
* Compare to human readable certificates.
      python3 ./diff_human_readable.py <golden-hu.txt> <silver-hu.txt> 
      [--output <path/out.txt>]
```

### ./chain_diff_human_readable.sh
This is a wrapper to the python script diff_human_readable.py descriped above.
In difference it takes a folder as argument at scans it recursive for human 
readable certificates.txt files. For each it calls the python3 script 
diff_human_readable.py at stores the diff for each in a log file.
Run --help will give you some more details.

How to generate human readable certificates see the help for 
*./create-certificates.sh --verbose*. 

#### Example 
```console
* Compare multi certificates in a given folder and store the difference in 
* a --clean logfile
   ./chain_diff_human_readable.sh ./<path>/<certificate_folder> -c
```


```console
    Don't store the differances in a logfile. Only print it on stdout (and
    redirect it manual to an other_path and other_folder_name).
   ./chain_diff_human_readable.sh   -n  > ./<other_path>/<other_folder_name>
```

### ./clone_config.sh
This is a simple script to create a new independent *openssl_configs* bundle.
The script  copies the configuration folder to the path and folder name given by 
the script parameter and replaces the hard coded paths in the openssl 
configuration files by the new path. Finally it git checkout the original 
openssl_configs in case they were changed by the user before copy.

Run *--help* for more information.

#### Example 
```console
* Create an independent openssl configuration bundle in the <path> with the given
   <copy_foldername>.
    ./clone_config.sh ./<path>/<copy_foldername>
```

## OpenSSL man pages
The following man pages are useful when working with openssl and its configuration 
files. 
* man openssl-ecparam 
* man openssl-rq
* man openssl-ca
* man openssl-x509
* man x509v3_config
