#!/bin/sh
#
# Author: Matthias Nagel
# Date: 2019-11-21
set -ex

CR_FILE="/tmp/tmp-cr"
CNF_DIR="./cnf"
KEY_DIR="./output/sks"
CERT_DIR="./output/certs"
TA_DIR="./output/tas"


_generateCertificate() {

    # ecparam:  Generates a private key key *.pen from an elliptic curve (EC)
    openssl ecparam -name secp384r1 -genkey -noout -out "$KEY_DIR/$1.pem"

    # req:  Creates certificate in PKCS#10 format and (or) can create self
    #       signed certificates for use as root CAs for example.
    openssl req -new -utf8 -config "$CNF_DIR/$1" -key "$KEY_DIR/$1.pem" \
        -out $CR_FILE.pem

    if [ $2 -eq 1 ]
    then
        # ca:   Sign ROOT certificate given by the input.
        # The self signed root CA certificate needs to include the extensions
        openssl ca -batch -utf8 -config $CNF_FILE.cnf -create_serial \
                   -extensions self_issued_extensions -selfsign  \
                   -in $CR_FILE.pem -notext -out $TA_DIR/$1.pem
    else
        # ca:   Sign USER certificate given by the input.
        openssl ca -batch -utf8 -config $CA_CNF_FILE.cnf -create_serial \
                   -in $CR_FILE.pem -notext -out $TA_DIR/$1.pem
    fi

    # x509: Converts the just created certificate to an x509 standard.
    openssl x509 -inform PEM -in $TA_DIR/$1.pem -outform DER -out $TA_DIR/$1.der

    rm $CR_FILE
}

# Create Root CA certificate
_createCA_root() {
    BASE_NAME="root-ca-1"
    CERT_FILE="${TA_DIR}/${BASE_NAME}"

    touch "./output/dbs/${BASE_NAME}-index.txt"

    _setup_privateKey $BASE_NAME

    openssl x509 -inform PEM -in $CERT_FILE.pem -outform DER -out $CERT_FILE.der
}

_createCA_sub() {
    # Create Sub CA certificate
    BASE_NAME="sub-ca-1"
    CA_CNF_FILE="${CNF_DIR}/root-ca-1"
    CNF_FILE="${CNF_DIR}/${BASE_NAME}"
    CERT_FILE="${CERT_DIR}/${BASE_NAME}"
    touch "./output/dbs/${BASE_NAME}-index.txt"

}


_createCA_subscriber() {
    # Create a subscriber certificate
    BASE_NAME="subscriber-1"
    CA_CNF_FILE="${CNF_DIR}/sub-ca-1"
    CNF_FILE="${CNF_DIR}/${BASE_NAME}"
    CERT_FILE="${CERT_DIR}/${BASE_NAME}"
    openssl ca -batch -utf8 -config $CA_CNF_FILE.cnf -create_serial \
               -in $CR_FILE.pem -notext -out $CERT_FILE.pem
    openssl x509 -inform PEM -in $CERT_FILE.pem -outform DER -out $CERT_FILE.der
}
