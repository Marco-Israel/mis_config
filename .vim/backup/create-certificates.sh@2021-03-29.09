#!/bin/sh
#
# Author: Matthias Nagel
# Date: 2019-11-21
set -e
BASE_NAME=""
CR_FILE="/dev/shm/tmp-cr"
CA_CNF_FILE=""
CNF_FILE=""
KEY_FILE=""
CERT_FILE=""
CNF_DIR="./cnf"
KEY_DIR="./output/sks"
CERT_DIR="./output/certs"
TA_DIR="./output/tas"


# Create Root CA certificate
BASE_NAME="root-ca-1"
CA_CNF_FILE="${CNF_DIR}/${BASE_NAME}"
CNF_FILE=$CA_CNF_FILE
KEY_FILE="${KEY_DIR}/${BASE_NAME}"
CERT_FILE="${TA_DIR}/${BASE_NAME}"
touch "./output/dbs/${BASE_NAME}-index.txt"
# ecparam:  Generates a private key key *.pen from an elliptic curve  (EC)
# req:  Creates certificate requests in PKCS#10 format and can create self
#       signed certificates for use as root CAs for example.
# ca:   Sign certificate requests
openssl ecparam -name secp384r1 -genkey -noout -out $KEY_FILE.pem

openssl req -new -utf8 -config $CNF_FILE.cnf -key $KEY_FILE.pem -out $CR_FILE.pem


openssl ca -batch -selfsign -utf8 -config $CA_CNF_FILE.cnf \
           -extensions self_issued_extensions -create_serial \
           -in $CR_FILE.pem -notext -out $CERT_FILE.pem
openssl x509 -inform PEM -in $CERT_FILE.pem -outform DER -out $CERT_FILE.der


# Create Sub CA certificate
BASE_NAME="sub-ca-1"
CA_CNF_FILE="${CNF_DIR}/root-ca-1"
CNF_FILE="${CNF_DIR}/${BASE_NAME}"
KEY_FILE="${KEY_DIR}/${BASE_NAME}"
CERT_FILE="${CERT_DIR}/${BASE_NAME}"
touch "./output/dbs/${BASE_NAME}-index.txt"
openssl ecparam -name secp384r1 -genkey -noout -out $KEY_FILE.pem
openssl req -new -utf8 -config $CNF_FILE.cnf -key $KEY_FILE.pem -out $CR_FILE.pem
openssl ca -batch -utf8 -config $CA_CNF_FILE.cnf -create_serial \
           -in $CR_FILE.pem -notext -out $CERT_FILE.pem
openssl x509 -inform PEM -in $CERT_FILE.pem -outform DER -out $CERT_FILE.der

# Create a subscriber certificate
BASE_NAME="subscriber-1"
CA_CNF_FILE="${CNF_DIR}/sub-ca-1"
CNF_FILE="${CNF_DIR}/${BASE_NAME}"
KEY_FILE="${KEY_DIR}/${BASE_NAME}"
CERT_FILE="${CERT_DIR}/${BASE_NAME}"
openssl ecparam -name secp384r1 -genkey -noout -out $KEY_FILE.pem
openssl req -new -utf8 -config $CNF_FILE.cnf -key $KEY_FILE.pem -out $CR_FILE.pem
openssl ca -batch -utf8 -config $CA_CNF_FILE.cnf -create_serial \
           -in $CR_FILE.pem -notext -out $CERT_FILE.pem
openssl x509 -inform PEM -in $CERT_FILE.pem -outform DER -out $CERT_FILE.der
